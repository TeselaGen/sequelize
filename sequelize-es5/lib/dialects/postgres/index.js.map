{"version":3,"sources":["../../../../sequelize-es6/lib/dialects/postgres/index.js"],"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","postgres","PostgresDialect","sequelize","connectionManager","extend","options","_dialect","prototype","supports","merge","cloneDeep","returnValues","returning","bulkDefault","schemas","lock","lockOf","lockKey","lockOuterJoinFailure","forShare","index","concurrently","using","where","NUMERIC","ARRAY","RANGE","GEOMETRY","GEOGRAPHY","JSON","JSONB","HSTORE","deferrableConstraints","searchPath","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports","default"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,kBAAkBD,QAAQ,aAAR,CAAxB;AACA,IAAME,oBAAoBF,QAAQ,sBAAR,CAA1B;AACA,IAAMG,QAAQH,QAAQ,SAAR,CAAd;AACA,IAAMI,iBAAiBJ,QAAQ,mBAAR,CAAvB;AACA,IAAMK,YAAYL,QAAQ,kBAAR,EAA4BM,QAA9C;;IAEMC,e;;;AACJ,2BAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AAErB,UAAKA,SAAL,GAAiBA,SAAjB;AACA,UAAKC,iBAAL,GAAyB,IAAIP,iBAAJ,QAA4BM,SAA5B,CAAzB;AACA,UAAKJ,cAAL,GAAsBL,EAAEW,MAAF,CAAS,EAAT,EAAaN,cAAb,EAA6B;AACjDO,eAASH,UAAUG,OAD8B;AAEjDC,qBAFiD;AAGjDJ;AAHiD,KAA7B,CAAtB;AAJqB;AAStB;;;EAV2BP,e;;AAa9BM,gBAAgBM,SAAhB,CAA0BC,QAA1B,GAAqCf,EAAEgB,KAAF,CAAQhB,EAAEiB,SAAF,CAAYf,gBAAgBY,SAAhB,CAA0BC,QAAtC,CAAR,EAAyD;AAC5F,oBAAkB,IAD0E;AAE5F,eAAa,IAF+E;AAG5F,sBAAoB,KAHwE;AAI5F,iBAAe,IAJ6E;AAK5FG,gBAAc;AACZC,eAAW;AADC,GAL8E;AAQ5FC,eAAa,IAR+E;AAS5FC,WAAS,IATmF;AAU5FC,QAAM,IAVsF;AAW5FC,UAAQ,IAXoF;AAY5FC,WAAS,IAZmF;AAa5FC,wBAAsB,IAbsE;AAc5FC,YAAU,WAdkF;AAe5FC,SAAO;AACLC,kBAAc,IADT;AAELC,WAAO,CAFF;AAGLC,WAAO;AAHF,GAfqF;AAoB5FC,WAAS,IApBmF;AAqB5FC,SAAO,IArBqF;AAsB5FC,SAAO,IAtBqF;AAuB5FC,YAAU,IAvBkF;AAwB5FC,aAAW,IAxBiF;AAyB5FC,QAAM,IAzBsF;AA0B5FC,SAAO,IA1BqF;AA2B5FC,UAAQ,IA3BoF;AA4B5FC,yBAAuB,IA5BqE;AA6B5FC,cAAa;AA7B+E,CAAzD,CAArC;;AAgCArC,kBAAkBW,SAAlB,CAA4B2B,cAA5B,GAA6C,OAA7C;AACAjC,gBAAgBM,SAAhB,CAA0BV,KAA1B,GAAkCA,KAAlC;AACAI,gBAAgBM,SAAhB,CAA0BR,SAA1B,GAAsCA,SAAtC;AACAE,gBAAgBM,SAAhB,CAA0B4B,IAA1B,GAAiC,UAAjC;AACAlC,gBAAgBM,SAAhB,CAA0B6B,SAA1B,GAAsC,GAAtC;AACAnC,gBAAgBM,SAAhB,CAA0B8B,cAA1B,GAA2CpC,gBAAgBM,SAAhB,CAA0B6B,SAArE;AACAnC,gBAAgBM,SAAhB,CAA0B+B,eAA1B,GAA4CrC,gBAAgBM,SAAhB,CAA0B6B,SAAtE;;AAEAG,OAAOC,OAAP,GAAiBvC,eAAjB;AACAsC,OAAOC,OAAP,CAAeC,OAAf,GAAyBxC,eAAzB;AACAsC,OAAOC,OAAP,CAAevC,eAAf,GAAiCA,eAAjC","file":"index.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').postgres;\n\nclass PostgresDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = _.extend({}, QueryGenerator, {\n      options: sequelize.options,\n      _dialect: this,\n      sequelize\n    });\n  }\n}\n\nPostgresDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'DEFAULT VALUES': true,\n  'EXCEPTION': true,\n  'ON DUPLICATE KEY': false,\n  'ORDER NULLS': true,\n  returnValues: {\n    returning: true\n  },\n  bulkDefault: true,\n  schemas: true,\n  lock: true,\n  lockOf: true,\n  lockKey: true,\n  lockOuterJoinFailure: true,\n  forShare: 'FOR SHARE',\n  index: {\n    concurrently: true,\n    using: 2,\n    where: true\n  },\n  NUMERIC: true,\n  ARRAY: true,\n  RANGE: true,\n  GEOMETRY: true,\n  GEOGRAPHY: true,\n  JSON: true,\n  JSONB: true,\n  HSTORE: true,\n  deferrableConstraints: true,\n  searchPath : true\n});\n\nConnectionManager.prototype.defaultVersion = '9.4.0';\nPostgresDialect.prototype.Query = Query;\nPostgresDialect.prototype.DataTypes = DataTypes;\nPostgresDialect.prototype.name = 'postgres';\nPostgresDialect.prototype.TICK_CHAR = '\"';\nPostgresDialect.prototype.TICK_CHAR_LEFT = PostgresDialect.prototype.TICK_CHAR;\nPostgresDialect.prototype.TICK_CHAR_RIGHT = PostgresDialect.prototype.TICK_CHAR;\n\nmodule.exports = PostgresDialect;\nmodule.exports.default = PostgresDialect;\nmodule.exports.PostgresDialect = PostgresDialect;\n"]}