{"version":3,"sources":["../../../../sequelize-es6/lib/dialects/mssql/data-types.js"],"names":["_","require","moment","inherits","module","exports","warn","BaseTypes","ABSTRACT","bind","undefined","DATE","types","mssql","STRING","CHAR","TEXT","INTEGER","BIGINT","FLOAT","TIME","DATEONLY","BOOLEAN","BLOB","DECIMAL","UUID","ENUM","REAL","DOUBLE","GEOMETRY","length","apply","arguments","prototype","toSql","_length","toLowerCase","_hexify","hex","binary","_binary","escape","_stringify","value","options","NOW","parse","format","_unsigned","_zerofill","decimals","_decimals","obj","Object","create","forIn","DataType","key","extend","oldType"],"mappings":"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","file":"data-types.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst inherits = require('../../utils/inherits');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://msdn.microsoft.com/en-us/library/ms187752%28v=sql.110%29.aspx');\n\n  BaseTypes.DATE.types.mssql = [43];\n  BaseTypes.STRING.types.mssql = [231, 173];\n  BaseTypes.CHAR.types.mssql = [175];\n  BaseTypes.TEXT.types.mssql = false;\n  BaseTypes.INTEGER.types.mssql = [38];\n  BaseTypes.BIGINT.types.mssql = false;\n  BaseTypes.FLOAT.types.mssql = [109];\n  BaseTypes.TIME.types.mssql = [41];\n  BaseTypes.DATEONLY.types.mssql = [40];\n  BaseTypes.BOOLEAN.types.mssql = [104];\n  BaseTypes.BLOB.types.mssql = [165];\n  BaseTypes.DECIMAL.types.mssql = [106];\n  BaseTypes.UUID.types.mssql = false;\n  BaseTypes.ENUM.types.mssql = false;\n  BaseTypes.REAL.types.mssql = [109];\n  BaseTypes.DOUBLE.types.mssql = [109];\n  // BaseTypes.GEOMETRY.types.mssql = [240]; // not yet supported\n  BaseTypes.GEOMETRY.types.mssql = false;\n\n  function BLOB(length) {\n    if (!(this instanceof BLOB)) return new BLOB(length);\n    BaseTypes.BLOB.apply(this, arguments);\n  }\n  inherits(BLOB, BaseTypes.BLOB);\n\n  BLOB.prototype.toSql = function toSql() {\n    if (this._length) {\n      if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n        warn('MSSQL does not support BLOB with the `length` = `tiny` option. `VARBINARY(256)` will be used instead.');\n        return 'VARBINARY(256)';\n      }\n      warn('MSSQL does not support BLOB with the `length` option. `VARBINARY(MAX)` will be used instead.');\n    }\n    return 'VARBINARY(MAX)';\n  };\n\n  BLOB.prototype._hexify = function _hexify(hex) {\n    return '0x' + hex;\n  };\n\n  function STRING(length, binary) {\n    if (!(this instanceof STRING)) return new STRING(length, binary);\n    BaseTypes.STRING.apply(this, arguments);\n  }\n  inherits(STRING, BaseTypes.STRING);\n\n  STRING.prototype.toSql = function toSql() {\n    if (!this._binary) {\n      return 'NVARCHAR(' + this._length + ')';\n    } else {\n      return 'BINARY(' + this._length + ')';\n    }\n  };\n\n  STRING.prototype.escape = false;\n  STRING.prototype._stringify = function _stringify(value, options) {\n    if (this._binary) {\n      return BLOB.prototype._stringify(value);\n    } else {\n      return options.escape(value);\n    }\n  };\n\n  function TEXT(length) {\n    if (!(this instanceof TEXT)) return new TEXT(length);\n    BaseTypes.TEXT.apply(this, arguments);\n  }\n  inherits(TEXT, BaseTypes.TEXT);\n\n  TEXT.prototype.toSql = function toSql() {\n    // TEXT is deprecated in mssql and it would normally be saved as a non-unicode string.\n    // Using unicode is just future proof\n    if (this._length) {\n      if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n        warn('MSSQL does not support TEXT with the `length` = `tiny` option. `NVARCHAR(256)` will be used instead.');\n        return 'NVARCHAR(256)';\n      }\n      warn('MSSQL does not support TEXT with the `length` option. `NVARCHAR(MAX)` will be used instead.');\n    }\n    return 'NVARCHAR(MAX)';\n  };\n\n  function BOOLEAN() {\n    if (!(this instanceof BOOLEAN)) return new BOOLEAN();\n    BaseTypes.BOOLEAN.apply(this, arguments);\n  }\n  inherits(BOOLEAN, BaseTypes.BOOLEAN);\n\n  BOOLEAN.prototype.toSql = function toSql() {\n    return 'BIT';\n  };\n\n  function UUID() {\n    if (!(this instanceof UUID)) return new UUID();\n    BaseTypes.UUID.apply(this, arguments);\n  }\n  inherits(UUID, BaseTypes.UUID);\n\n  UUID.prototype.toSql = function toSql() {\n    return 'CHAR(36)';\n  };\n\n  function NOW() {\n    if (!(this instanceof NOW)) return new NOW();\n    BaseTypes.NOW.apply(this, arguments);\n  }\n  inherits(NOW, BaseTypes.NOW);\n\n  NOW.prototype.toSql = function toSql() {\n    return 'GETDATE()';\n  };\n\n  function DATE(length) {\n    if (!(this instanceof DATE)) return new DATE(length);\n    BaseTypes.DATE.apply(this, arguments);\n  }\n  inherits(DATE, BaseTypes.DATE);\n\n  DATE.prototype.toSql = function toSql() {\n    return 'DATETIMEOFFSET';\n  };\n\n  function DATEONLY() {\n    if (!(this instanceof DATEONLY)) return new DATEONLY();\n    BaseTypes.DATEONLY.apply(this, arguments);\n  }\n  inherits(DATEONLY, BaseTypes.DATEONLY);\n\n  DATEONLY.parse = function(value) {\n    return moment(value).format('YYYY-MM-DD');\n  };\n\n  function INTEGER(length) {\n    if (!(this instanceof INTEGER)) return new INTEGER(length);\n    BaseTypes.INTEGER.apply(this, arguments);\n\n    // MSSQL does not support any options for integer\n    if (this._length || this.options.length || this._unsigned || this._zerofill) {\n      warn('MSSQL does not support INTEGER with options. Plain `INTEGER` will be used instead.');\n      this._length = undefined;\n      this.options.length = undefined;\n      this._unsigned = undefined;\n      this._zerofill = undefined;\n    }\n  }\n  inherits(INTEGER, BaseTypes.INTEGER);\n\n  function BIGINT(length) {\n    if (!(this instanceof BIGINT)) return new BIGINT(length);\n    BaseTypes.BIGINT.apply(this, arguments);\n\n    // MSSQL does not support any options for bigint\n    if (this._length || this.options.length || this._unsigned || this._zerofill) {\n      warn('MSSQL does not support BIGINT with options. Plain `BIGINT` will be used instead.');\n      this._length = undefined;\n      this.options.length = undefined;\n      this._unsigned = undefined;\n      this._zerofill = undefined;\n    }\n  }\n  inherits(BIGINT, BaseTypes.BIGINT);\n\n  function REAL(length, decimals) {\n    if (!(this instanceof REAL)) return new REAL(length, decimals);\n    BaseTypes.REAL.apply(this, arguments);\n\n    // MSSQL does not support any options for real\n    if (this._length || this.options.length || this._unsigned || this._zerofill) {\n      warn('MSSQL does not support REAL with options. Plain `REAL` will be used instead.');\n      this._length = undefined;\n      this.options.length = undefined;\n      this._unsigned = undefined;\n      this._zerofill = undefined;\n    }\n  }\n  inherits(REAL, BaseTypes.REAL);\n\n  function FLOAT(length, decimals) {\n    if (!(this instanceof FLOAT)) return new FLOAT(length, decimals);\n    BaseTypes.FLOAT.apply(this, arguments);\n\n    // MSSQL does only support lengths as option.\n    // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n    // Values between 25-53 result in 15 digits precision (8 bytes storage size)\n    // If decimals are provided remove these and print a warning\n    if (this._decimals) {\n      warn('MSSQL does not support Float with decimals. Plain `FLOAT` will be used instead.');\n      this._length = undefined;\n      this.options.length = undefined;\n    }\n    if (this._unsigned) {\n      warn('MSSQL does not support Float unsigned. `UNSIGNED` was removed.');\n      this._unsigned = undefined;\n    }\n    if (this._zerofill) {\n      warn('MSSQL does not support Float zerofill. `ZEROFILL` was removed.');\n      this._zerofill = undefined;\n    }\n  }\n  inherits(FLOAT, BaseTypes.FLOAT);\n\n  function ENUM() {\n    if (!(this instanceof ENUM)) {\n      const obj = Object.create(ENUM.prototype);\n      ENUM.apply(obj, arguments);\n      return obj;\n    }\n    BaseTypes.ENUM.apply(this, arguments);\n  }\n  inherits(ENUM, BaseTypes.ENUM);\n\n  ENUM.prototype.toSql = function toSql() {\n    return 'VARCHAR(255)';\n  };\n\n  const exports = {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    INTEGER,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n\n  _.forIn(exports, (DataType, key) => {\n    if (!DataType.key) DataType.key = key;\n    if (!DataType.extend) {\n      DataType.extend = function extend(oldType) {\n        return new DataType(oldType.options);\n      };\n    }\n  });\n\n  return exports;\n};\n"]}