{"version":3,"sources":["../../sequelize-es6/lib/data-types.js"],"names":["util","require","inherits","_","Wkt","sequelizeErrors","warnings","Validator","validator","momentTz","moment","Utils","ABSTRACT","prototype","dialectTypes","toString","options","toSql","key","warn","link","text","stringify","value","_stringify","STRING","length","binary","_binary","_length","validate","Object","call","Buffer","isBuffer","isNumber","ValidationError","format","defineProperty","get","CHAR","apply","arguments","TEXT","toLowerCase","isString","NUMBER","_zerofill","zerofill","_decimals","decimals","_precision","precision","_scale","scale","_unsigned","unsigned","result","isFloat","String","INTEGER","isInt","BIGINT","FLOAT","REAL","DOUBLE","DECIMAL","filter","identity","join","isDecimal","floating","escape","isNaN","isFinite","sign","BOOLEAN","isBoolean","TIME","DATE","isDate","_applyTimezone","date","timezone","tz","zone","utcOffset","DATEONLY","HSTORE","isPlainObject","JSONTYPE","JSON","JSONB","NOW","BLOB","Array","isArray","hex","_hexify","RANGE","subtype","isFunction","_subtype","pgRangeSubtypes","integer","bigint","decimal","dateonly","datenotz","pgRangeCastTypes","toCastType","inclusive","UUID","isUUID","acceptStrings","UUIDV1","UUIDV4","VIRTUAL","ReturnType","fields","returnType","ENUM","values","slice","reduce","element","concat","includes","ARRAY","type","is","obj","helpers","BINARY","UNSIGNED","ZEROFILL","PRECISION","SCALE","GEOMETRY","srid","convert","GEOGRAPHY","helper","DataType","dataType","keys","DataTypes","module","exports","NUMERIC","NONE","each","types","postgres","mysql","sqlite","mssql","oracle"],"mappings":"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","file":"data-types.js","sourcesContent":["'use strict';\n\nconst util = require('util');\nconst inherits = require('./utils/inherits');\nconst _ = require('lodash');\nconst Wkt = require('terraformer-wkt-parser');\nconst sequelizeErrors = require('./errors');\nconst warnings = {};\nconst Validator = require('./utils/validator-extras').validator;\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\nconst Utils = require('./utils');\n\nfunction ABSTRACT() {}\n\nABSTRACT.prototype.dialectTypes = '';\n\nABSTRACT.prototype.toString = function toString(options) {\n  return this.toSql(options);\n};\nABSTRACT.prototype.toSql = function toSql() {\n  return this.key;\n};\nABSTRACT.warn = function warn(link, text) {\n  if (!warnings[text]) {\n    warnings[text] = true;\n    Utils.warn(`${text}, '\\n>> Check:', ${link}`);\n  }\n};\nABSTRACT.prototype.stringify = function stringify(value, options) {\n  if (this._stringify) {\n    return this._stringify(value, options);\n  }\n  return value;\n};\n\nfunction STRING(length, binary) {\n  const options = typeof length === 'object' && length || {length, binary};\n\n  if (!(this instanceof STRING)) return new STRING(options);\n\n  this.options = options;\n  this._binary = options.binary;\n  this._length = options.length || 255;\n}\ninherits(STRING, ABSTRACT);\n\nSTRING.prototype.key = STRING.key = 'STRING';\nSTRING.prototype.toSql = function toSql() {\n  return 'VARCHAR(' + this._length + ')' + (this._binary ? ' BINARY' : '');\n};\nSTRING.prototype.validate = function validate(value) {\n  if (Object.prototype.toString.call(value) !== '[object String]') {\n    if (this.options.binary && Buffer.isBuffer(value) || _.isNumber(value)) {\n      return true;\n    }\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n  }\n\n  return true;\n};\nObject.defineProperty(STRING.prototype, 'BINARY', {\n  get() {\n    this._binary = true;\n    this.options.binary = true;\n    return this;\n  }\n});\n\nfunction CHAR(length, binary) {\n  const options = typeof length === 'object' && length || {length, binary};\n\n  if (!(this instanceof CHAR)) return new CHAR(options);\n  STRING.apply(this, arguments);\n}\ninherits(CHAR, STRING);\n\nCHAR.prototype.key = CHAR.key = 'CHAR';\nCHAR.prototype.toSql = function toSql() {\n  return 'CHAR(' + this._length + ')' + (this._binary ? ' BINARY' : '');\n};\n\nfunction TEXT(length) {\n  const options = typeof length === 'object' && length || {length};\n  if (!(this instanceof TEXT)) return new TEXT(options);\n  this.options = options;\n  this._length = options.length || '';\n}\ninherits(TEXT, ABSTRACT);\n\nTEXT.prototype.key = TEXT.key = 'TEXT';\nTEXT.prototype.toSql = function toSql() {\n  switch (this._length.toLowerCase()) {\n    case 'tiny':\n      return 'TINYTEXT';\n    case 'medium':\n      return 'MEDIUMTEXT';\n    case 'long':\n      return 'LONGTEXT';\n    default:\n      return this.key;\n  }\n};\nTEXT.prototype.validate = function validate(value) {\n  if (!_.isString(value)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n  }\n\n  return true;\n};\n\nfunction NUMBER(options) {\n  this.options = options;\n  this._length = options.length;\n  this._zerofill = options.zerofill;\n  this._decimals = options.decimals;\n  this._precision = options.precision;\n  this._scale = options.scale;\n  this._unsigned = options.unsigned;\n}\ninherits(NUMBER, ABSTRACT);\n\nNUMBER.prototype.key = NUMBER.key = 'NUMBER';\nNUMBER.prototype.toSql = function toSql() {\n  let result = this.key;\n  if (this._length) {\n    result += '(' + this._length;\n    if (typeof this._decimals === 'number') {\n      result += ',' + this._decimals;\n    }\n    result += ')';\n  }\n  if (this._unsigned) {\n    result += ' UNSIGNED';\n  }\n  if (this._zerofill) {\n    result += ' ZEROFILL';\n  }\n  return result;\n};\n\nNUMBER.prototype.validate = function(value) {\n  if (!Validator.isFloat(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid number', value));\n  }\n\n  return true;\n};\n\nObject.defineProperty(NUMBER.prototype, 'UNSIGNED', {\n  get() {\n    this._unsigned = true;\n    this.options.unsigned = true;\n    return this;\n  }\n});\nObject.defineProperty(NUMBER.prototype, 'ZEROFILL', {\n  get() {\n    this._zerofill = true;\n    this.options.zerofill = true;\n    return this;\n  }\n});\n\nfunction INTEGER(length) {\n  const options = typeof length === 'object' && length || {length};\n  if (!(this instanceof INTEGER)) return new INTEGER(options);\n  NUMBER.call(this, options);\n}\ninherits(INTEGER, NUMBER);\n\nINTEGER.prototype.key = INTEGER.key = 'INTEGER';\nINTEGER.prototype.validate = function validate(value) {\n  if (!Validator.isInt(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid integer', value));\n  }\n\n  return true;\n};\n\nfunction BIGINT(length) {\n  const options = typeof length === 'object' && length || {length};\n  if (!(this instanceof BIGINT)) return new BIGINT(options);\n  NUMBER.call(this, options);\n}\ninherits(BIGINT, NUMBER);\n\nBIGINT.prototype.key = BIGINT.key = 'BIGINT';\nBIGINT.prototype.validate = function validate(value) {\n  if (!Validator.isInt(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid bigint', value));\n  }\n\n  return true;\n};\n\nfunction FLOAT(length, decimals) {\n  const options = typeof length === 'object' && length || {length, decimals};\n  if (!(this instanceof FLOAT)) return new FLOAT(options);\n  NUMBER.call(this, options);\n}\ninherits(FLOAT, NUMBER);\n\nFLOAT.prototype.key = FLOAT.key = 'FLOAT';\nFLOAT.prototype.validate = function validate(value) {\n  if (!Validator.isFloat(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid float', value));\n  }\n\n  return true;\n};\n\nfunction REAL(length, decimals) {\n  const options = typeof length === 'object' && length || {length, decimals};\n  if (!(this instanceof REAL)) return new REAL(options);\n  NUMBER.call(this, options);\n}\ninherits(REAL, NUMBER);\n\nREAL.prototype.key = REAL.key = 'REAL';\n\nfunction DOUBLE(length, decimals) {\n  const options = typeof length === 'object' && length || {length, decimals};\n  if (!(this instanceof DOUBLE)) return new DOUBLE(options);\n  NUMBER.call(this, options);\n}\ninherits(DOUBLE, NUMBER);\n\nDOUBLE.prototype.key = DOUBLE.key = 'DOUBLE PRECISION';\n\nfunction DECIMAL(precision, scale) {\n  const options = typeof precision === 'object' && precision || {precision, scale};\n  if (!(this instanceof DECIMAL)) return new DECIMAL(options);\n  NUMBER.call(this, options);\n}\ninherits(DECIMAL, NUMBER);\n\nDECIMAL.prototype.key = DECIMAL.key = 'DECIMAL';\nDECIMAL.prototype.toSql = function toSql() {\n\n  if (this._precision || this._scale) {\n    return 'DECIMAL(' + [this._precision, this._scale].filter(_.identity).join(',') + ')';\n  }\n\n  return 'DECIMAL';\n};\nDECIMAL.prototype.validate = function validate(value) {\n  if (!Validator.isDecimal(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid decimal', value));\n  }\n\n  return true;\n};\n\nfor (const floating of [FLOAT, DOUBLE, REAL]) {\n  floating.prototype.escape = false;\n  floating.prototype._stringify = function _stringify(value) {\n    if (isNaN(value)) {\n      return \"'NaN'\";\n    } else if (!isFinite(value)) {\n      const sign = value < 0 ? '-' : '';\n      return \"'\" + sign + \"Infinity'\";\n    }\n\n    return value;\n  };\n}\n\nfunction BOOLEAN() {\n  if (!(this instanceof BOOLEAN)) return new BOOLEAN();\n}\ninherits(BOOLEAN, ABSTRACT);\n\nBOOLEAN.prototype.key = BOOLEAN.key = 'BOOLEAN';\nBOOLEAN.prototype.toSql = function toSql() {\n  return 'TINYINT(1)';\n};\nBOOLEAN.prototype.validate = function validate(value) {\n  if (!Validator.isBoolean(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid boolean', value));\n  }\n\n  return true;\n};\n\nfunction TIME() {\n  if (!(this instanceof TIME)) return new TIME();\n}\ninherits(TIME, ABSTRACT);\n\nTIME.prototype.key = TIME.key = 'TIME';\nTIME.prototype.toSql = function toSql() {\n  return 'TIME';\n};\n\nfunction DATE(length) {\n  const options = typeof length === 'object' && length || {length};\n\n  if (!(this instanceof DATE)) return new DATE(options);\n\n  this.options = options;\n  this._length = options.length || '';\n}\ninherits(DATE, ABSTRACT);\n\nDATE.prototype.key = DATE.key = 'DATE';\nDATE.prototype.toSql = function toSql() {\n  return 'DATETIME';\n};\nDATE.prototype.validate = function validate(value) {\n  if (!Validator.isDate(String(value))) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid date', value));\n  }\n\n  return true;\n};\n\nDATE.prototype._applyTimezone = function _applyTimezone(date, options) {\n  if (options.timezone) {\n    if (momentTz.tz.zone(options.timezone)) {\n      date = momentTz(date).tz(options.timezone);\n    } else {\n      date = moment(date).utcOffset(options.timezone);\n    }\n  } else {\n    date = momentTz(date);\n  }\n\n  return date;\n};\n\nDATE.prototype._stringify = function _stringify(date, options) {\n  date = this._applyTimezone(date, options);\n\n  // Z here means current timezone, _not_ UTC\n  return date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n};\n\nfunction DATEONLY() {\n  if (!(this instanceof DATEONLY)) return new DATEONLY();\n}\nutil.inherits(DATEONLY, ABSTRACT);\n\nDATEONLY.prototype.key = DATEONLY.key = 'DATEONLY';\nDATEONLY.prototype.toSql = function() {\n  return 'DATE';\n};\n\nDATEONLY.prototype._stringify = function _stringify(date) {\n  return moment(date).format('YYYY-MM-DD');\n};\n\nfunction HSTORE() {\n  if (!(this instanceof HSTORE)) return new HSTORE();\n}\ninherits(HSTORE, ABSTRACT);\n\nHSTORE.prototype.key = HSTORE.key = 'HSTORE';\nHSTORE.prototype.validate = function validate(value) {\n  if (!_.isPlainObject(value)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid hstore', value));\n  }\n\n  return true;\n};\n\nfunction JSONTYPE() {\n  if (!(this instanceof JSONTYPE)) return new JSONTYPE();\n}\ninherits(JSONTYPE, ABSTRACT);\n\nJSONTYPE.prototype.key = JSONTYPE.key = 'JSON';\nJSONTYPE.prototype.validate = function validate() {\n  return true;\n};\n\nJSONTYPE.prototype._stringify = function _stringify(value) {\n  return JSON.stringify(value);\n};\n\nfunction JSONB() {\n  if (!(this instanceof JSONB)) return new JSONB();\n  JSONTYPE.call(this);\n}\ninherits(JSONB, JSONTYPE);\n\nJSONB.prototype.key = JSONB.key = 'JSONB';\n\nfunction NOW() {\n  if (!(this instanceof NOW)) return new NOW();\n}\ninherits(NOW, ABSTRACT);\n\nNOW.prototype.key = NOW.key = 'NOW';\n\nfunction BLOB(length) {\n  const options = typeof length === 'object' && length || {length};\n  if (!(this instanceof BLOB)) return new BLOB(options);\n  this.options = options;\n  this._length = options.length || '';\n}\ninherits(BLOB, ABSTRACT);\n\nBLOB.prototype.key = BLOB.key = 'BLOB';\nBLOB.prototype.toSql = function toSql() {\n  switch (this._length.toLowerCase()) {\n    case 'tiny':\n      return 'TINYBLOB';\n    case 'medium':\n      return 'MEDIUMBLOB';\n    case 'long':\n      return 'LONGBLOB';\n    default:\n      return this.key;\n  }\n};\nBLOB.prototype.validate = function validate(value) {\n  if (!_.isString(value) && !Buffer.isBuffer(value)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid blob', value));\n  }\n\n  return true;\n};\n\nBLOB.prototype.escape = false;\nBLOB.prototype._stringify = function _stringify(value) {\n  if (!Buffer.isBuffer(value)) {\n    if (Array.isArray(value)) {\n      value = new Buffer(value);\n    } else {\n      value = new Buffer(value.toString());\n    }\n  }\n  const hex = value.toString('hex');\n\n  return this._hexify(hex);\n};\n\nBLOB.prototype._hexify = function _hexify(hex) {\n  return \"X'\" + hex + \"'\";\n};\n\nfunction RANGE(subtype) {\n  const options = _.isPlainObject(subtype) ? subtype : {subtype};\n\n  if (!options.subtype) options.subtype = new INTEGER();\n\n  if (_.isFunction(options.subtype)) {\n    options.subtype = new options.subtype();\n  }\n\n  if (!(this instanceof RANGE)) return new RANGE(options);\n\n  this._subtype = options.subtype.key;\n  this.options = options;\n}\ninherits(RANGE, ABSTRACT);\n\nconst pgRangeSubtypes = {\n  integer: 'int4range',\n  bigint: 'int8range',\n  decimal: 'numrange',\n  dateonly: 'daterange',\n  date: 'tstzrange',\n  datenotz: 'tsrange'\n};\n\nconst pgRangeCastTypes = {\n  integer: 'integer',\n  bigint: 'bigint',\n  decimal: 'numeric',\n  dateonly: 'date',\n  date: 'timestamptz',\n  datenotz: 'timestamp'\n};\n\nRANGE.prototype.key = RANGE.key = 'RANGE';\nRANGE.prototype.toSql = function toSql() {\n  return pgRangeSubtypes[this._subtype.toLowerCase()];\n};\nRANGE.prototype.toCastType = function toCastType() {\n  return pgRangeCastTypes[this._subtype.toLowerCase()];\n};\nRANGE.prototype.validate = function validate(value) {\n  if (_.isPlainObject(value) && value.inclusive) {\n    value = value.inclusive;\n  }\n\n  if (!_.isArray(value)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid range', value));\n  }\n\n  if (value.length !== 2) {\n    throw new sequelizeErrors.ValidationError('A range must be an array with two elements');\n  }\n\n  return true;\n};\n\nfunction UUID() {\n  if (!(this instanceof UUID)) return new UUID();\n}\ninherits(UUID, ABSTRACT);\n\nUUID.prototype.key = UUID.key = 'UUID';\nUUID.prototype.validate = function validate(value, options) {\n  if (!_.isString(value) || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n  }\n\n  return true;\n};\n\nfunction UUIDV1() {\n  if (!(this instanceof UUIDV1)) return new UUIDV1();\n}\ninherits(UUIDV1, ABSTRACT);\n\nUUIDV1.prototype.key = UUIDV1.key = 'UUIDV1';\nUUIDV1.prototype.validate = function validate(value, options) {\n  if (!_.isString(value) || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n  }\n\n  return true;\n};\n\nfunction UUIDV4() {\n  if (!(this instanceof UUIDV4)) return new UUIDV4();\n}\ninherits(UUIDV4, ABSTRACT);\n\nUUIDV4.prototype.key = UUIDV4.key = 'UUIDV4';\nUUIDV4.prototype.validate = function validate(value, options) {\n  if (!_.isString(value) || !Validator.isUUID(value, 4) && (!options || !options.acceptStrings)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuidv4', value));\n  }\n\n  return true;\n};\n\nfunction VIRTUAL(ReturnType, fields) {\n  if (!(this instanceof VIRTUAL)) return new VIRTUAL(ReturnType, fields);\n  if (typeof ReturnType === 'function') ReturnType = new ReturnType();\n\n  this.returnType = ReturnType;\n  this.fields = fields;\n}\ninherits(VIRTUAL, ABSTRACT);\n\nVIRTUAL.prototype.key = VIRTUAL.key = 'VIRTUAL';\n\nfunction ENUM(value) {\n  const options = typeof value === 'object' && !Array.isArray(value) && value || {\n    values: Array.prototype.slice.call(arguments).reduce((result, element) => {\n      return result.concat(Array.isArray(element) ? element : [element]);\n    }, [])\n  };\n  if (!(this instanceof ENUM)) return new ENUM(options);\n  this.values = options.values;\n  this.options = options;\n}\ninherits(ENUM, ABSTRACT);\n\nENUM.prototype.key = ENUM.key = 'ENUM';\nENUM.prototype.validate = function validate(value) {\n  if (!_.includes(this.values, value)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid choice in %j', value, this.values));\n  }\n\n  return true;\n};\n\nfunction ARRAY(type) {\n  const options = _.isPlainObject(type) ? type : {type};\n  if (!(this instanceof ARRAY)) return new ARRAY(options);\n  this.type = typeof options.type === 'function' ? new options.type() : options.type;\n}\ninherits(ARRAY, ABSTRACT);\n\nARRAY.prototype.key = ARRAY.key = 'ARRAY';\nARRAY.prototype.toSql = function toSql() {\n  return this.type.toSql() + '[]';\n};\nARRAY.prototype.validate = function validate(value) {\n  if (!_.isArray(value)) {\n    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid array', value));\n  }\n\n  return true;\n};\nARRAY.is = function is(obj, type) {\n  return obj instanceof ARRAY && obj.type instanceof type;\n};\n\nconst helpers = {\n  BINARY: [STRING, CHAR],\n  UNSIGNED: [NUMBER, INTEGER, BIGINT, FLOAT, DOUBLE, REAL, DECIMAL],\n  ZEROFILL: [NUMBER, INTEGER, BIGINT, FLOAT, DOUBLE, REAL, DECIMAL],\n  PRECISION: [DECIMAL],\n  SCALE: [DECIMAL]\n};\n\nfunction GEOMETRY(type, srid) {\n  const options = _.isPlainObject(type) ? type : {type, srid};\n\n  if (!(this instanceof GEOMETRY)) return new GEOMETRY(options);\n\n  this.options = options;\n  this.type = options.type;\n  this.srid = options.srid;\n}\ninherits(GEOMETRY, ABSTRACT);\n\nGEOMETRY.prototype.key = GEOMETRY.key = 'GEOMETRY';\n\nGEOMETRY.prototype.escape = false;\nGEOMETRY.prototype._stringify = function _stringify(value, options) {\n  return 'GeomFromText(' + options.escape(Wkt.convert(value)) + ')';\n};\n\nfunction GEOGRAPHY(type, srid) {\n  const options = _.isPlainObject(type) ? type : {type, srid};\n\n  if (!(this instanceof GEOGRAPHY)) return new GEOGRAPHY(options);\n\n  this.options = options;\n  this.type = options.type;\n  this.srid = options.srid;\n}\ninherits(GEOGRAPHY, ABSTRACT);\n\nGEOGRAPHY.prototype.key = GEOGRAPHY.key = 'GEOGRAPHY';\n\nGEOGRAPHY.prototype.escape = false;\nGEOGRAPHY.prototype._stringify = function _stringify(value, options) {\n  return 'GeomFromText(' + options.escape(Wkt.convert(value)) + ')';\n};\n\nfor (const helper of Object.keys(helpers)) {\n  for (const DataType of helpers[helper]) {\n    if (!DataType[helper]) {\n      Object.defineProperty(DataType, helper, {\n        get() {\n          const dataType = new DataType();\n          if (typeof dataType[helper] === 'object') {\n            return dataType;\n          }\n          return dataType[helper].apply(dataType, arguments);\n        }\n      });\n    }\n  }\n}\n\n/**\n * A convenience class holding commonly used data types. The datatypes are used when defining a new model using `Sequelize.define`, like this:\n * ```js\n * sequelize.define('model', {\n *   column: DataTypes.INTEGER\n * })\n * ```\n * When defining a model you can just as easily pass a string as type, but often using the types defined here is beneficial. For example, using `DataTypes.BLOB`, mean\n * that that column will be returned as an instance of `Buffer` when being fetched by sequelize.\n *\n * To provide a length for the data type, you can invoke it like a function: `INTEGER(2)`\n *\n * Some data types have special properties that can be accessed in order to change the data type.\n * For example, to get an unsigned integer with zerofill you can do `DataTypes.INTEGER.UNSIGNED.ZEROFILL`.\n * The order you access the properties in do not matter, so `DataTypes.INTEGER.ZEROFILL.UNSIGNED` is fine as well.\n *\n * * All number types (`INTEGER`, `BIGINT`, `FLOAT`, `DOUBLE`, `REAL`, `DECIMAL`) expose the properties `UNSIGNED` and `ZEROFILL`\n * * The `CHAR` and `STRING` types expose the `BINARY` property\n *\n *\n * Three of the values provided here (`NOW`, `UUIDV1` and `UUIDV4`) are special default values, that should not be used to define types. Instead they are used as shorthands for\n * defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:\n * ```js`\n * sequelize.define('model',` {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: DataTypes.UUIDV1,\n *     primaryKey: true\n *   }\n * })\n * ```\n * There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished\n * using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value\n * from a function.\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: function() {\n *       return generateMyId()\n *     },\n *     primaryKey: true\n *   }\n * })\n * ```\n *\n * @property {function(length=255: integer)} STRING A variable length string\n * @property {function(length=255: integer)} CHAR A fixed length string.\n * @property {function([length]: string)} TEXT An unlimited length text column. Available lengths: `tiny`, `medium`, `long`\n * @property {function(length=255: integer)} INTEGER A 32 bit integer.\n * @property {function(length: integer)} BIGINT A 64 bit integer. Note: an attribute defined as `BIGINT` will be treated like a `string` due this [feature from node-postgres](https://github.com/brianc/node-postgres/pull/353) to prevent precision loss. To have this attribute as a `number`, this is a possible [workaround](https://github.com/sequelize/sequelize/issues/2383#issuecomment-58006083).\n * @property {function(length: integer, decimals: integer)} FLOAT Floating point number (4-byte precision).\n * @property {function(length: integer, decimals: integer)} DOUBLE Floating point number (8-byte precision).\n * @property {function(precision: integer, scale: integer)} DECIMAL Decimal number.\n * @property {function(length: integer, decimals: integer)} REAL Floating point number (4-byte precision).\n * @property {function} BOOLEAN A boolean / tinyint column, depending on dialect\n * @property {function(length: string)} BLOB Binary storage. Available lengths: `tiny`, `medium`, `long`\n * @property {function(values: string[])} ENUM An enumeration. `DataTypes.ENUM('value', 'another value')`.\n * @property {function(length: integer)} DATE A datetime column\n * @property {function} DATEONLY A date only column (no timestamp)\n * @property {function} TIME A time column\n * @property {function} NOW A default value of the current timestamp\n * @property {function} UUID A column storing a unique universal identifier. Use with `UUIDV1` or `UUIDV4` for default values.\n * @property {function} UUIDV1 A default unique universal identifier generated following the UUID v1 standard\n * @property {function} UUIDV4 A default unique universal identifier generated following the UUID v4 standard\n * @property {function} HSTORE A key / value store column. Only available in postgres.\n * @property {function} JSON A JSON string column. Only available in postgres and sqlite.\n * @property {function} JSONB A binary storage JSON column. Only available in postgres.\n * @property {function(type: DataTypes)} ARRAY An array of `type`, e.g. `DataTypes.ARRAY(DataTypes.DECIMAL)`. Only available in postgres.\n * @property {function(type: DataTypes)} RANGE Range types are data types representing a range of values of some element type (called the range's subtype).\n * Only available in postgres. See [the Postgres documentation](http://www.postgresql.org/docs/9.4/static/rangetypes.html) for more details\n * @property {function(type: string, srid: string)} GEOMETRY A column storing Geometry information. It is only available in PostgreSQL (with PostGIS) or MySQL.\n * In MySQL, allowable Geometry types are `POINT`, `LINESTRING`, `POLYGON`.\n *\n * GeoJSON is accepted as input and returned as output.\n * In PostGIS, the GeoJSON is parsed using the PostGIS function `ST_GeomFromGeoJSON`.\n * In MySQL it is parsed using the function `GeomFromText`.\n * Therefore, one can just follow the [GeoJSON spec](http://geojson.org/geojson-spec.html) for handling geometry objects.  See the following examples:\n *\n * ```js\n * // Create a new point:\n * const point = { type: 'Point', coordinates: [39.807222,-76.984722]};\n *\n * User.create({username: 'username', geometry: point });\n *\n * // Create a new linestring:\n * const line = { type: 'LineString', 'coordinates': [ [100.0, 0.0], [101.0, 1.0] ] };\n *\n * User.create({username: 'username', geometry: line });\n *\n * // Create a new polygon:\n * const polygon = { type: 'Polygon', coordinates: [\n *                 [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n *                   [100.0, 1.0], [100.0, 0.0] ]\n *                 ]};\n *\n * User.create({username: 'username', geometry: polygon });\n\n * // Create a new point with a custom SRID:\n * const point = {\n *   type: 'Point',\n *   coordinates: [39.807222,-76.984722],\n *   crs: { type: 'name', properties: { name: 'EPSG:4326'} }\n * };\n *\n * User.create({username: 'username', geometry: point })\n * ```\n * @property {function(type: string, srid: string)} GEOGRAPHY A geography datatype represents two dimensional spacial objects in an elliptic coord system.\n * @property {function(returnType: DataTypes, fields: string[])} VIRTUAL A virtual value that is not stored in the DB. This could for example be useful if you want to provide a default value in your model that is returned to the user but not stored in the DB.\n *\n * You could also use it to validate a value before permuting and storing it. Checking password length before hashing it for example:\n * ```js\n * sequelize.define('user', {\n *   password_hash: DataTypes.STRING,\n *   password: {\n *     type: DataTypes.VIRTUAL,\n *     set: function (val) {\n *        // Remember to set the data value, otherwise it won't be validated\n *        this.setDataValue('password', val);\n *        this.setDataValue('password_hash', this.salt + val);\n *      },\n *      validate: {\n *         isLongEnough: function (val) {\n *           if (val.length < 7) {\n *             throw new Error(\"Please choose a longer password\")\n *          }\n *       }\n *     }\n *   }\n * })\n * ```\n * In the above code the password is stored plainly in the password field so it can be validated, but is never stored in the DB.\n *\n * VIRTUAL also takes a return type and dependency fields as arguments\n * If a virtual attribute is present in `attributes` it will automatically pull in the extra fields as well.\n * Return type is mostly useful for setups that rely on types like GraphQL.\n * ```js\n * {\n *   active: {\n *     type: new DataTypes.VIRTUAL(DataTypes.BOOLEAN, ['createdAt']),\n *     get: function() {\n *       return this.get('createdAt') > Date.now() - (7 * 24 * 60 * 60 * 1000)\n *     }\n *   }\n * }\n * ```\n */\nconst DataTypes = module.exports = {\n  ABSTRACT,\n  STRING,\n  CHAR,\n  TEXT,\n  NUMBER,\n  INTEGER,\n  BIGINT,\n  FLOAT,\n  TIME,\n  DATE,\n  DATEONLY,\n  BOOLEAN,\n  NOW,\n  BLOB,\n  DECIMAL,\n  NUMERIC: DECIMAL,\n  UUID,\n  UUIDV1,\n  UUIDV4,\n  HSTORE,\n  JSON: JSONTYPE,\n  JSONB,\n  VIRTUAL,\n  ARRAY,\n  NONE: VIRTUAL,\n  ENUM,\n  RANGE,\n  REAL,\n  DOUBLE,\n  'DOUBLE PRECISION': DOUBLE,\n  GEOMETRY,\n  GEOGRAPHY\n};\n\n_.each(DataTypes, dataType => {\n  dataType.types = {};\n});\n\nDataTypes.postgres = require('./dialects/postgres/data-types')(DataTypes);\nDataTypes.mysql = require('./dialects/mysql/data-types')(DataTypes);\nDataTypes.sqlite = require('./dialects/sqlite/data-types')(DataTypes);\nDataTypes.mssql = require('./dialects/mssql/data-types')(DataTypes);\nDataTypes.oracle = require('./dialects/oracle/data-types')(DataTypes);\n\nmodule.exports = DataTypes;\n"]}