{"version":3,"sources":["../../sequelize-es6/lib/utils.js"],"names":["DataTypes","require","SqlString","_","runInContext","parameterValidator","Logger","uuid","Promise","primitives","inflection","logger","exports","debug","bind","deprecate","warn","getLogger","useInflection","_inflection","camelizeIf","str","condition","result","camelize","underscoredIf","underscore","isPrimitive","val","indexOf","mergeDefaults","a","b","mergeWith","isPlainObject","objectValue","undefined","merge","arguments","obj","forOwn","value","key","Array","isArray","concat","lowercaseFirst","s","toLowerCase","slice","uppercaseFirst","toUpperCase","spliceStr","index","count","add","trim","replace","match","c","format","arr","dialect","timeZone","formatNamedParameters","sql","parameters","cloneDeep","cloneDeepWith","elem","clone","mapFinderOptions","options","Model","_hasVirtualAttributes","attributes","attribute","_isVirtualAttribute","rawAttributes","type","fields","without","apply","_virtualAttributes","uniq","mapOptionFieldNames","map","attr","field","where","mapWhereFieldNames","rawAttribute","fieldName","HSTORE","JSON","mapValueFieldNames","dataValues","values","isColString","substr","length","argsArePrimaryKeys","args","primaryKeys","Object","keys","each","arg","Date","Buffer","isBuffer","canTreatArrayAsAnd","reduce","treatAsAnd","combineTableNames","tableName1","tableName2","singularize","pluralize","removeCommentsFromFunctionString","toDefaultValue","tmp","ABSTRACT","toSql","UUIDV1","v1","UUIDV4","v4","NOW","now","defaultValueSchemable","isFunction","removeNullValuesFromHash","hash","omitNull","allowNull","_hash","forIn","stack","orig","Error","prepareStackTrace","err","captureStackTrace","errStack","sliceArgs","begin","i","setMilliseconds","TICK_CHAR","addTicks","tickChar","removeTicks","RegExp","SequelizeMethod","Fn","fn","Col","col","Cast","Literal","Json","conditionsOrPath","isObject","conditions","path","Where","comparator","logic","validateParameter","mapIsolationLevelStringToTedious","isolationLevel","tedious","tediousIsolationLevel","ISOLATION_LEVEL","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT"],"mappings":"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","file":"utils.js","sourcesContent":["'use strict';\n\nconst DataTypes = require('./data-types');\nconst SqlString = require('./sql-string');\nconst _ = require('lodash').runInContext(); // Prevent anyone messing with template settings by creating a fresh copy\nconst parameterValidator = require('./utils/parameter-validator');\nconst Logger = require('./utils/logger');\nconst uuid = require('uuid');\nconst Promise = require('./promise');\nconst primitives = ['string', 'number', 'boolean'];\n\nlet inflection = require('inflection');\nconst logger = new Logger();\n\nexports.Promise = Promise;\nexports._ = _;\nexports.debug = logger.debug.bind(logger);\nexports.deprecate = logger.deprecate.bind(logger);\nexports.warn = logger.warn.bind(logger);\nexports.getLogger = () =>  logger ;\n\nfunction useInflection(_inflection) {\n  inflection = _inflection;\n}\nexports.useInflection = useInflection;\n\nfunction camelizeIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = camelize(str);\n  }\n\n  return result;\n}\nexports.camelizeIf = camelizeIf;\n\nfunction underscoredIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = underscore(str);\n  }\n\n  return result;\n}\nexports.underscoredIf = underscoredIf;\n\nfunction isPrimitive(val) {\n  return primitives.indexOf(typeof val) !== -1;\n}\nexports.isPrimitive = isPrimitive;\n\n// Same concept as _.merge, but don't overwrite properties that have already been assigned\nfunction mergeDefaults(a, b) {\n  return _.mergeWith(a, b, objectValue => {\n    // If it's an object, let _ handle it this time, we will be called again for each property\n    if (!this._.isPlainObject(objectValue) && objectValue !== undefined) {\n      return objectValue;\n    }\n  });\n}\nexports.mergeDefaults = mergeDefaults;\n\n// An alternative to _.merge, which doesn't clone its arguments\n// Cloning is a bad idea because options arguments may contain references to sequelize\n// models - which again reference database libs which don't like to be cloned (in particular pg-native)\nfunction merge() {\n  const result = {};\n\n  for (const obj of arguments) {\n    _.forOwn(obj, (value, key) => {\n      if (typeof value !== 'undefined') {\n        if (!result[key]) {\n          result[key] = value;\n        } else if (_.isPlainObject(value) && _.isPlainObject(result[key])) {\n          result[key] = merge(result[key], value);\n        } else if (Array.isArray(value) && Array.isArray(result[key])) {\n          result[key] = value.concat(result[key]);\n        } else {\n          result[key] = value;\n        }\n      }\n    });\n  }\n\n  return result;\n}\nexports.merge = merge;\n\nfunction lowercaseFirst(s) {\n  return s[0].toLowerCase() + s.slice(1);\n}\nexports.lowercaseFirst = lowercaseFirst;\n\nfunction uppercaseFirst(s) {\n  return s[0].toUpperCase() + s.slice(1);\n}\nexports.uppercaseFirst = uppercaseFirst;\n\nfunction spliceStr(str, index, count, add) {\n  return str.slice(0, index) + add + str.slice(index + count);\n}\nexports.spliceStr = spliceStr;\n\nfunction camelize(str) {\n  return str.trim().replace(/[-_\\s]+(.)?/g, (match, c) => c.toUpperCase());\n}\nexports.camelize = camelize;\n\nfunction underscore(str) {\n  return inflection.underscore(str);\n}\nexports.underscore = underscore;\n\nfunction format(arr, dialect) {\n  const timeZone = null;\n  // Make a clone of the array beacuse format modifies the passed args\n  return SqlString.format(arr[0], arr.slice(1), timeZone, dialect);\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, parameters, dialect) {\n  const timeZone = null;\n  return SqlString.formatNamedParameters(sql, parameters, timeZone, dialect);\n}\nexports.formatNamedParameters = formatNamedParameters;\n\nfunction cloneDeep(obj) {\n  obj = obj || {};\n  return _.cloneDeepWith(obj, elem => {\n    // Do not try to customize cloning of arrays or POJOs\n    if (Array.isArray(elem) || _.isPlainObject(elem)) {\n      return undefined;\n    }\n\n    // Don't clone stuff that's an object, but not a plain one - fx example sequelize models and instances\n    if (typeof elem === 'object') {\n      return elem;\n    }\n\n    // Preserve special data-types like `fn` across clones. _.get() is used for checking up the prototype chain\n    if (elem && typeof elem.clone === 'function') {\n      return elem.clone();\n    }\n  });\n}\nexports.cloneDeep = cloneDeep;\n\n/* Expand and normalize finder options */\nfunction mapFinderOptions(options, Model) {\n  if (Model._hasVirtualAttributes && Array.isArray(options.attributes)) {\n    for (const attribute of options.attributes) {\n      if (Model._isVirtualAttribute(attribute) && Model.rawAttributes[attribute].type.fields) {\n        options.attributes = options.attributes.concat(Model.rawAttributes[attribute].type.fields);\n      }\n    }\n    options.attributes = _.without.apply(_, [options.attributes].concat(Model._virtualAttributes));\n    options.attributes = _.uniq(options.attributes);\n  }\n\n  mapOptionFieldNames(options, Model);\n\n  return options;\n}\nexports.mapFinderOptions = mapFinderOptions;\n\n/* Used to map field names in attributes and where conditions */\nfunction mapOptionFieldNames(options, Model) {\n  if (Array.isArray(options.attributes)) {\n    options.attributes = options.attributes.map(attr => {\n      // Object lookups will force any variable to strings, we don't want that for special objects etc\n      if (typeof attr !== 'string') return attr;\n      // Map attributes to aliased syntax attributes\n      if (Model.rawAttributes[attr] && attr !== Model.rawAttributes[attr].field) {\n        return [Model.rawAttributes[attr].field, attr];\n      }\n      return attr;\n    });\n  }\n\n  if (options.where && _.isPlainObject(options.where)) {\n    options.where = mapWhereFieldNames(options.where, Model);\n  }\n\n  return options;\n}\nexports.mapOptionFieldNames = mapOptionFieldNames;\n\nfunction mapWhereFieldNames(attributes, Model) {\n  let attribute;\n  let rawAttribute;\n\n  if (attributes) {\n    for (attribute in attributes) {\n      rawAttribute = Model.rawAttributes[attribute];\n\n      if (rawAttribute && rawAttribute.field !== rawAttribute.fieldName) {\n        attributes[rawAttribute.field] = attributes[attribute];\n        delete attributes[attribute];\n      }\n\n      if (_.isPlainObject(attributes[attribute])\n        && !(rawAttribute && (\n          rawAttribute.type instanceof DataTypes.HSTORE\n          || rawAttribute.type instanceof DataTypes.JSON))) { // Prevent renaming of HSTORE & JSON fields\n        attributes[attribute] = mapOptionFieldNames({\n          where: attributes[attribute]\n        }, Model).where;\n      }\n\n      if (Array.isArray(attributes[attribute])) {\n        attributes[attribute] = attributes[attribute].map(where => {\n          if (_.isPlainObject(where)) {\n            return mapWhereFieldNames(where, Model);\n          }\n\n          return where;\n        });\n      }\n    }\n  }\n\n  return attributes;\n}\nexports.mapWhereFieldNames = mapWhereFieldNames;\n\n/* Used to map field names in values */\nfunction mapValueFieldNames(dataValues, fields, Model) {\n  const values = {};\n\n  for (const attr of fields) {\n    if (dataValues[attr] !== undefined && !Model._isVirtualAttribute(attr)) {\n      // Field name mapping\n      if (Model.rawAttributes[attr] && Model.rawAttributes[attr].field && Model.rawAttributes[attr].field !== attr) {\n        values[Model.rawAttributes[attr].field] = dataValues[attr];\n      } else {\n        values[attr] = dataValues[attr];\n      }\n    }\n  }\n\n  return values;\n}\nexports.mapValueFieldNames = mapValueFieldNames;\n\nfunction isColString(value) {\n  return typeof value === 'string' && value.substr(0, 1) === '$' && value.substr(value.length - 1, 1) === '$';\n}\nexports.isColString = isColString;\n\nfunction argsArePrimaryKeys(args, primaryKeys) {\n  let result = args.length === Object.keys(primaryKeys).length;\n  if (result) {\n    _.each(args, arg => {\n      if (result) {\n        if (['number', 'string'].indexOf(typeof arg) !== -1) {\n          result = true;\n        } else {\n          result = arg instanceof Date || Buffer.isBuffer(arg);\n        }\n      }\n    });\n  }\n  return result;\n}\nexports.argsArePrimaryKeys = argsArePrimaryKeys;\n\nfunction canTreatArrayAsAnd(arr) {\n  return arr.reduce((treatAsAnd, arg) => {\n    if (treatAsAnd) {\n      return treatAsAnd;\n    } else {\n      return _.isPlainObject(arg);\n    }\n  }, false);\n}\nexports.canTreatArrayAsAnd = canTreatArrayAsAnd;\n\nfunction combineTableNames(tableName1, tableName2) {\n  return tableName1.toLowerCase() < tableName2.toLowerCase() ? tableName1 + tableName2 : tableName2 + tableName1;\n}\nexports.combineTableNames = combineTableNames;\n\nfunction singularize(str) {\n  return inflection.singularize(str);\n}\nexports.singularize = singularize;\n\nfunction pluralize(str) {\n  return inflection.pluralize(str);\n}\nexports.pluralize = pluralize;\n\nfunction removeCommentsFromFunctionString(s) {\n  s = s.replace(/\\s*(\\/\\/.*)/g, '');\n  s = s.replace(/(\\/\\*[\\n\\r\\s\\S]*?\\*\\/)/mg, '');\n\n  return s;\n}\nexports.removeCommentsFromFunctionString = removeCommentsFromFunctionString;\n\nfunction toDefaultValue(value) {\n  if (typeof value === 'function') {\n    const tmp = value();\n    if (tmp instanceof DataTypes.ABSTRACT) {\n      return tmp.toSql();\n    } else {\n      return tmp;\n    }\n  } else if (value instanceof DataTypes.UUIDV1) {\n    return uuid.v1();\n  } else if (value instanceof DataTypes.UUIDV4) {\n    return uuid.v4();\n  } else if (value instanceof DataTypes.NOW) {\n    return now();\n  } else if (_.isPlainObject(value) || _.isArray(value)) {\n    return _.clone(value);\n  } else {\n    return value;\n  }\n}\nexports.toDefaultValue = toDefaultValue;\n\n/**\n * Determine if the default value provided exists and can be described\n * in a db schema using the DEFAULT directive.\n *\n * @param  {*} value Any default value.\n * @return {boolean} yes / no.\n * @private\n */\nfunction defaultValueSchemable(value) {\n  if (typeof value === 'undefined') { return false; }\n\n  // TODO this will be schemable when all supported db\n  // have been normalized for this case\n  if (value instanceof DataTypes.NOW) { return false; }\n\n  if (value instanceof DataTypes.UUIDV1 || value instanceof DataTypes.UUIDV4) { return false; }\n\n  if (_.isFunction(value)) {\n    return false;\n  }\n\n  return true;\n}\nexports.defaultValueSchemable = defaultValueSchemable;\n\nfunction removeNullValuesFromHash(hash, omitNull, options) {\n  let result = hash;\n\n  options = options || {};\n  options.allowNull = options.allowNull || [];\n\n  if (omitNull) {\n    const _hash = {};\n\n    _.forIn(hash, (val, key) => {\n      if (options.allowNull.indexOf(key) > -1 || key.match(/Id$/) || val !== null && val !== undefined) {\n        _hash[key] = val;\n      }\n    });\n\n    result = _hash;\n  }\n\n  return result;\n}\nexports.removeNullValuesFromHash = removeNullValuesFromHash;\n\nfunction stack() {\n  const orig = Error.prepareStackTrace;\n  Error.prepareStackTrace = (_, stack) => stack;\n  const err = new Error();\n  Error.captureStackTrace(err, stack);\n  const errStack = err.stack;\n  Error.prepareStackTrace = orig;\n  return errStack;\n}\nexports.stack = stack;\n\nfunction sliceArgs(args, begin) {\n  begin = begin || 0;\n  const tmp = new Array(args.length - begin);\n  for (let i = begin; i < args.length; ++i) {\n    tmp[i - begin] = args[i];\n  }\n  return tmp;\n}\nexports.sliceArgs = sliceArgs;\n\nfunction now(dialect) {\n  const now = new Date();\n  if (['mysql', 'postgres', 'sqlite'].indexOf(dialect) === -1) {\n    now.setMilliseconds(0);\n  }\n  return now;\n}\nexports.now = now;\n\n// Note: Use the `quoteIdentifier()` and `escape()` methods on the\n// `QueryInterface` instead for more portable code.\n\nconst TICK_CHAR = '`';\nexports.TICK_CHAR = TICK_CHAR;\n\nfunction addTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return tickChar + removeTicks(s, tickChar) + tickChar;\n}\nexports.addTicks = addTicks;\n\nfunction removeTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return s.replace(new RegExp(tickChar, 'g'), '');\n}\nexports.removeTicks = removeTicks;\n\n/**\n * Utility functions for representing SQL functions, and columns that should be escaped.\n * Please do not use these functions directly, use Sequelize.fn and Sequelize.col instead.\n * @private\n */\nclass SequelizeMethod {}\nexports.SequelizeMethod = SequelizeMethod;\n\nclass Fn extends SequelizeMethod {\n  constructor(fn, args) {\n    super();\n    this.fn = fn;\n    this.args = args;\n  }\n  clone() {\n    return new Fn(this.fn, this.args);\n  }\n}\nexports.Fn = Fn;\n\nclass Col extends SequelizeMethod {\n  constructor(col) {\n    super();\n    if (arguments.length > 1) {\n      col = this.sliceArgs(arguments);\n    }\n    this.col = col;\n  }\n}\nexports.Col = Col;\n\nclass Cast extends SequelizeMethod {\n  constructor(val, type) {\n    super();\n    this.val = val;\n    this.type = (type || '').trim();\n  }\n}\nexports.Cast = Cast;\n\nclass Literal extends SequelizeMethod {\n  constructor(val) {\n    super();\n    this.val = val;\n  }\n}\nexports.Literal = Literal;\n\nclass Json extends SequelizeMethod {\n  constructor(conditionsOrPath, value) {\n    super();\n    if (_.isObject(conditionsOrPath)) {\n      this.conditions = conditionsOrPath;\n    } else {\n      this.path = conditionsOrPath;\n      if (value) {\n        this.value = value;\n      }\n    }\n  }\n}\nexports.Json = Json;\n\nclass Where extends SequelizeMethod {\n  constructor(attribute, comparator, logic) {\n    super();\n    if (logic === undefined) {\n      logic = comparator;\n      comparator = '=';\n    }\n\n    this.attribute = attribute;\n    this.comparator = comparator;\n    this.logic = logic;\n  }\n}\nexports.Where = Where;\n\nexports.validateParameter = parameterValidator;\n\n\nexports.mapIsolationLevelStringToTedious = (isolationLevel, tedious) => {\n  if (!tedious) {\n    throw new Error('An instance of tedious lib should be passed to this function');\n  }\n  const tediousIsolationLevel = tedious.ISOLATION_LEVEL;\n  switch (isolationLevel) {\n    case 'READ_UNCOMMITTED':\n      return tediousIsolationLevel.READ_UNCOMMITTED;\n    case 'READ_COMMITTED':\n      return tediousIsolationLevel.READ_COMMITTED;\n    case 'REPEATABLE_READ':\n      return tediousIsolationLevel.REPEATABLE_READ;\n    case 'SERIALIZABLE':\n      return tediousIsolationLevel.SERIALIZABLE;\n    case 'SNAPSHOT':\n      return tediousIsolationLevel.SNAPSHOT;\n  }\n};"]}