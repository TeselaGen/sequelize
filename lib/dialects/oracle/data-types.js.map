{"version":3,"sources":["../../../../sequelize-es6/lib/dialects/oracle/data-types.js"],"names":["_","require","inherits","moment","momentTz","module","exports","warn","BaseTypes","ABSTRACT","bind","undefined","DATE","types","oracle","STRING","CHAR","TEXT","INTEGER","BIGINT","FLOAT","TIME","DATEONLY","BOOLEAN","BLOB","DECIMAL","UUID","ENUM","REAL","NUMERIC","DOUBLE","GEOMETRY","length","apply","arguments","prototype","toSql","_length","toLowerCase","isNaN","_hexify","hex","_binary","call","binary","escape","_stringify","value","options","NOW","_applyTimezone","date","timezone","tz","zone","utcOffset","format","momentDate","formatedDate","precision","scale","key","result","_decimals","_precision","_scale","_zerofill","_unsigned","decimals","obj","Object","create","parse","forIn","DataType","extend","oldType"],"mappings":"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","file":"data-types.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst inherits = require('../../utils/inherits');\nconst moment = require('moment');\nconst momentTz = require('moment-timezone');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'http://docs.oracle.com/cd/A87860_01/doc/server.817/a76965/c10datyp.htm');\n\n  BaseTypes.DATE.types.oracle = ['TIMESTAMP', 'TIMESTAMP WITH LOCAL TIME ZONE'];\n  BaseTypes.STRING.types.oracle = ['VARCHAR2', 'NVARCHAR2'];\n  BaseTypes.CHAR.types.oracle = ['CHAR', 'RAW'];\n  BaseTypes.TEXT.types.oracle = false;\n  BaseTypes.INTEGER.types.oracle = ['INTEGER'];\n  BaseTypes.BIGINT.types.oracle = false;\n  BaseTypes.FLOAT.types.oracle = false;\n  BaseTypes.TIME.types.oracle = ['TIMESTAMP WITH LOCAL TIME ZONE'];\n  BaseTypes.DATEONLY.types.oracle = ['DATE', 'DATEONLY'];\n  BaseTypes.BOOLEAN.types.oracle = ['NUMBER'];\n  BaseTypes.BLOB.types.oracle = ['BLOB'];\n  BaseTypes.DECIMAL.types.oracle = ['DECIMAL'];\n  BaseTypes.UUID.types.oracle = false;\n  BaseTypes.ENUM.types.oracle = false;\n  BaseTypes.REAL.types.oracle = false;\n  BaseTypes.NUMERIC.types.oracle = false;\n  BaseTypes.DOUBLE.types.oracle = false;\n  // BaseTypes.GEOMETRY.types.oracle = [240]; // not yet supported\n  BaseTypes.GEOMETRY.types.oracle = false;\n\n\n  function BLOB(length) {\n    if (!(this instanceof BLOB)) return new BLOB(length);\n    BaseTypes.BLOB.apply(this, arguments);\n  }\n  inherits(BLOB, BaseTypes.BLOB);\n\n  BLOB.prototype.toSql = function toSql() {\n    if (this._length) {\n      if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n        warn('ORACLE does not support BLOB with the `length` = `tiny` option. `RAW(256)` will be used instead.');\n        return 'RAW(256)';\n      }\n      warn('ORACLE does not support BLOB with the `length` option. `RAW(2000)` will be used instead.');\n      if (isNaN(this.length) || this.length > 2000) {\n        return 'RAW(2000)';\n      } else {\n        return `RAW(${this._length})`;\n      }\n    }\n    return 'BLOB';\n  };\n\n  BLOB.prototype._hexify = function _hexify(hex) {\n    return 'hextoraw(\\'' + hex + '\\')';\n  };\n\n  function CHAR(length) {\n    if (!(this instanceof CHAR)) return new CHAR(length);\n    BaseTypes.CHAR.apply(this, arguments);\n  }\n  inherits(CHAR, BaseTypes.CHAR);\n\n  CHAR.prototype.toSql = function toSql() {\n    if (this._binary) {\n      return 'RAW(' + this._length + ')';\n    }\n    return BaseTypes.CHAR.prototype.toSql.call(this);\n  };\n\n  function STRING(length, binary) {\n    if (!(this instanceof STRING)) return new STRING(length, binary);\n    BaseTypes.STRING.apply(this, arguments);\n  }\n  inherits(STRING, BaseTypes.STRING);\n\n  STRING.prototype.toSql = function toSql() {\n    if (!this._binary) {\n      return 'NVARCHAR2(' + this._length + ')';\n    } else{\n      return 'RAW(' + this._length + ')';\n    }\n  };\n\n  STRING.prototype.escape = false;\n\n  STRING.prototype._stringify = function _stringify(value, options) {\n    if (this._binary) {\n      return BLOB.prototype._stringify(value);\n    } else {\n      return options.escape(value);\n    }\n  };\n\n  function TEXT(length) {\n    if (!(this instanceof TEXT)) return new TEXT(length);\n    BaseTypes.TEXT.apply(this, arguments);\n  }\n  inherits(TEXT, BaseTypes.TEXT);\n\n  TEXT.prototype.toSql = function toSql() {\n    //TEXT is not support by Oracle, passing through NVARCHAR\n    if (this._length) {\n      if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n        warn('ORACLE does not support TEXT with the `length` = `tiny` option. `NVARCHAR(256)` will be used instead.');\n        return 'NVARCHAR2(256)';\n      }\n      warn('ORACLE does not support TEXT with the `length` option. `NVARCHAR(2000)` will be used instead.');\n    }\n    return 'NVARCHAR2(2000)';\n  };\n\n  function BOOLEAN() {\n    if (!(this instanceof BOOLEAN)) return new BOOLEAN();\n    BaseTypes.BOOLEAN.apply(this, arguments);\n  }\n  inherits(BOOLEAN, BaseTypes.BOOLEAN);\n\n\n  BOOLEAN.prototype.toSql = function toSql() {\n    return 'NUMBER(1)';\n  };\n\n  BOOLEAN.prototype._stringify = function _stringify(value) {\n    return !!value ? 1 : 0;\n  };\n\n  function UUID() {\n    if (!(this instanceof UUID)) return new UUID();\n    BaseTypes.UUID.apply(this, arguments);\n  }\n  inherits(UUID, BaseTypes.UUID);\n\n  UUID.prototype.toSql = function toSql() {\n    return 'NVARCHAR2(36)'; \n  };\n\n  /*UUID.prototype._stringify = function _stringify(value, options) {\n    return \"HEXTORAW('\" + value + \"')\";\n  };*/\n\n  function NOW() {\n    if (!(this instanceof NOW)) return new NOW();\n    BaseTypes.NOW.apply(this, arguments);\n  }\n  inherits(NOW, BaseTypes.NOW);\n\n\n  NOW.prototype.toSql = function toSql() {\n    return 'SELECT TO_CHAR(SYSDATE, \\'YYYY-MM-DD HH24:MI:SS\\') \"NOW\" FROM DUAL;';\n  };\n\n  NOW.prototype._stringify = function _stringify() {\n    return 'SELECT TO_CHAR(SYSDATE, \\'YYYY-MM-DD HH24:MI:SS\\') \"NOW\" FROM DUAL;';\n  };\n\n  function TIME(length) {\n    if (!(this instanceof TIME)) return new TIME(length);\n    BaseTypes.TIME.apply(this, arguments);\n  }\n  inherits(TIME, BaseTypes.TIME);\n\n  TIME.prototype.escape = false;\n\n  TIME.prototype.toSql = function toSql() {\n    return 'TIMESTAMP WITH LOCAL TIME ZONE';\n  };\n\n  TIME.prototype._applyTimezone = function _applyTimezone(date, options) {\n    if (options.timezone) {\n      if (momentTz.tz.zone(options.timezone)) {\n        date = momentTz(date).tz(options.timezone);\n      } else {\n        date = moment(date).utcOffset(options.timezone);\n      }\n    } else {\n      date = momentTz(date);\n    }\n\n    return date;\n  };\n  \n  TIME.prototype._stringify = function _stringify(date, options) {\n    const format = 'HH24:MI:SS.FFTZH:TZM';\n\n    //Oracle has no TIME object, we have to deal it as a real date and insert only the time we need\n    let momentDate = moment(date);\n    momentDate = this._applyTimezone(momentDate, options);\n    const formatedDate = momentDate.format('HH:mm:ss.SSS Z');\n\n    return `TO_TIMESTAMP_TZ('${formatedDate}','${format}')`;\n  };\n\n  function DATE(length) {\n    if (!(this instanceof DATE)) return new DATE(length);\n    BaseTypes.DATE.apply(this, arguments);\n  }\n  inherits(DATE, BaseTypes.DATE);\n\n  DATE.prototype.escape = false;\n\n  DATE.prototype.toSql = function toSql() {\n    return 'TIMESTAMP WITH LOCAL TIME ZONE';\n  };\n\n  DATE.prototype._stringify = function _stringify(date, options) {\n    const format = 'YYYY-MM-DD HH24:MI:SS.FFTZH:TZM';\n\n    date = this._applyTimezone(date, options);\n\n    const formatedDate = date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n\n    return `TO_TIMESTAMP_TZ('${formatedDate}','${format}')`;\n  };\n\n  function DECIMAL(precision, scale) {\n    if (!(this instanceof DECIMAL)) return new DECIMAL(precision, scale);\n    BaseTypes.DECIMAL.apply(this, arguments);\n  }\n  inherits(DECIMAL, BaseTypes.DECIMAL);\n\n  DECIMAL.prototype.key = DECIMAL.key = 'DECIMAL';\n\n  DECIMAL.prototype.toSql = function toSql() {\n    let result = '';\n    if (this._length) {\n      result += '(' + this._length;\n      if (typeof this._decimals === 'number') {\n        result += ',' + this._decimals;\n      }\n      result += ')';\n    }\n\n    if (!this._length && this._precision) {\n      result += '(' + this._precision;\n      if (typeof this._scale === 'number') {\n        result += ',' + this._scale;\n      }\n      result += ')';\n    }\n\n    return 'NUMBER' + result;\n  };\n\n  function INTEGER(length) {\n    if (!(this instanceof BaseTypes.INTEGER)) return new INTEGER(length);\n    BaseTypes.INTEGER.apply(this, arguments);\n\n    if (this._zerofill) {\n      warn('ORACLE does not support INTEGER with options. Plain `INTEGER` will be used instead.');\n      this._zerofill = undefined;\n    }\n    return BaseTypes.INTEGER.prototype.toSql.call(this);\n  }\n  inherits(INTEGER, BaseTypes.INTEGER);\n\n  INTEGER.prototype.toSql = function toSql() {\n    if (this._unsigned) {\n      if (this._length) {\n        return 'INTEGER(' + this._length + ')';\n      }\n      return 'INTEGER';\n    }\n    return 'INTEGER';\n  };\n\n\n  function BIGINT(length) {\n    warn('Oracle does not support BIGINT. Plain `NUMBER(19)` will be used instead.');\n    if (!(this instanceof BIGINT)) return new BIGINT(length);\n    BaseTypes.BIGINT.apply(this, arguments);\n\n    // ORACLE does not support any options for bigint\n    if (this._length || this.options.length || this._unsigned || this._zerofill) {\n      this._length = undefined;\n      this.options.length = undefined;\n      this._unsigned = undefined;\n      this._zerofill = undefined;\n    }\n  }\n  inherits(BIGINT, BaseTypes.BIGINT);\n\n  BIGINT.prototype.toSql = function toSql() {\n    return 'NUMBER(19)';\n  };\n\n  function REAL(length, decimals) {\n    if (!(this instanceof REAL)) return new REAL(length, decimals);\n    BaseTypes.REAL.apply(this, arguments);\n  }\n  inherits(REAL, BaseTypes.REAL);\n\n  REAL.prototype.toSql = function() {\n    return 'REAL';\n  };\n\n\n  function FLOAT(length, decimals) {\n    if (!(this instanceof FLOAT)) return new FLOAT(length, decimals);\n    BaseTypes.FLOAT.apply(this, arguments);\n  }\n  inherits(FLOAT, BaseTypes.FLOAT);\n\n  FLOAT.prototype.toSql = function toSql() {\n    if (this._length) {\n      return 'FLOAT(' + this._length + ')';  \n    }\n    return 'FLOAT';\n  };\n\n  function DOUBLE(length, decimals) {\n    if (!(this instanceof DOUBLE)) return new BaseTypes.DOUBLE(length, decimals);\n    BaseTypes.DOUBLE.apply(this, arguments);\n\n    if (this._length || this._unsigned || this._zerofill) {\n      this._length = undefined;\n      this.options.length = undefined;\n      this._unsigned = undefined;\n      this._zerofill = undefined;\n    }\n  }\n\n  DOUBLE.prototype.key = DOUBLE.key = 'DOUBLE PRECISION';\n\n  DOUBLE.prototype.toSql = function toSql() {\n    return 'NUMBER(15,5)';\n  };\n\n  function ENUM() {\n    if (!(this instanceof ENUM)) {\n      const obj = Object.create(ENUM.prototype);\n      ENUM.apply(obj, arguments);\n      return obj;\n    }\n    BaseTypes.ENUM.apply(this, arguments);\n  }\n  inherits(ENUM, BaseTypes.ENUM);\n\n  ENUM.prototype.toSql = function toSql() {\n    return 'NVARCHAR2(255)';\n  };\n\n  function DATEONLY() {\n    if (!(this instanceof DATEONLY)) return new DATEONLY();\n    BaseTypes.DATEONLY.apply(this, arguments);\n  }\n  inherits(DATEONLY, BaseTypes.DATEONLY);\n\n  DATEONLY.parse = function (value) {\n    return moment(value).format('YYYY-MM-DD');\n  };\n\n  const exports = {\n    BLOB,\n    BOOLEAN,\n    'DOUBLE PRECISION': DOUBLE,\n    DOUBLE,\n    ENUM,\n    STRING,\n    BIGINT,\n    CHAR,\n    UUID,\n    DATEONLY,\n    DATE,\n    NOW,\n    INTEGER,\n    REAL,\n    TIME,\n    DECIMAL,\n    FLOAT,\n    TEXT\n  };\n\n  _.forIn(exports, (DataType, key) => {\n    if (!DataType.key) DataType.key = key;\n    if (!DataType.extend) {\n      DataType.extend = function(oldType) {\n        return new DataType(oldType.options);\n      };\n    }\n  });\n\n  return exports;\n};\n"]}