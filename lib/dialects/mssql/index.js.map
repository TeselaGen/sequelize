{"version":3,"sources":["../../../../sequelize-es6/lib/dialects/mssql/index.js"],"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","mssql","MssqlDialect","sequelize","connectionManager","extend","options","_dialect","prototype","supports","merge","cloneDeep","lock","transactions","migrations","upserts","returnValues","output","schemas","autoIncrement","identityInsert","defaultValue","update","constraints","restrict","default","index","collate","length","parser","type","using","where","NUMERIC","tmpTableTrigger","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,kBAAkBD,QAAQ,aAAR,CAAxB;AACA,IAAME,oBAAoBF,QAAQ,sBAAR,CAA1B;AACA,IAAMG,QAAQH,QAAQ,SAAR,CAAd;AACA,IAAMI,iBAAiBJ,QAAQ,mBAAR,CAAvB;AACA,IAAMK,YAAYL,QAAQ,kBAAR,EAA4BM,KAA9C;;IAEMC,Y;;;AACJ,wBAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AAErB,UAAKA,SAAL,GAAiBA,SAAjB;AACA,UAAKC,iBAAL,GAAyB,IAAIP,iBAAJ,QAA4BM,SAA5B,CAAzB;AACA,UAAKJ,cAAL,GAAsBL,EAAEW,MAAF,CAAS,EAAT,EAAaN,cAAb,EAA6B;AACjDO,eAASH,UAAUG,OAD8B;AAEjDC,qBAFiD;AAGjDJ;AAHiD,KAA7B,CAAtB;AAJqB;AAStB;;;EAVwBP,e;;AAa3BM,aAAaM,SAAb,CAAuBC,QAAvB,GAAkCf,EAAEgB,KAAF,CAAQhB,EAAEiB,SAAF,CAAYf,gBAAgBY,SAAhB,CAA0BC,QAAtC,CAAR,EAAyD;AACzF,aAAW,IAD8E;AAEzF,oBAAkB,IAFuE;AAGzF,qBAAmB,IAHsE;AAIzF,iBAAe,KAJ0E;AAKzFG,QAAM,KALmF;AAMzFC,gBAAc,IAN2E;AAOzFC,cAAY,KAP6E;AAQzFC,WAAS,IARgF;AASzFC,gBAAc;AACZC,YAAQ;AADI,GAT2E;AAYzFC,WAAS,IAZgF;AAazFC,iBAAe;AACbC,oBAAgB,IADH;AAEbC,kBAAc,KAFD;AAGbC,YAAQ;AAHK,GAb0E;AAkBzFC,eAAa;AACXC,cAAU,KADC;AAEXC,aAAS;AAFE,GAlB4E;AAsBzFC,SAAO;AACLC,aAAS,KADJ;AAELC,YAAQ,KAFH;AAGLC,YAAQ,KAHH;AAILC,UAAM,IAJD;AAKLC,WAAO,KALF;AAMLC,WAAO;AANF,GAtBkF;AA8BzFC,WAAS,IA9BgF;AA+BzFC,mBAAiB;AA/BwE,CAAzD,CAAlC;;AAkCArC,kBAAkBW,SAAlB,CAA4B2B,cAA5B,GAA6C,WAA7C,C,CAA0D;AAC1DjC,aAAaM,SAAb,CAAuBV,KAAvB,GAA+BA,KAA/B;AACAI,aAAaM,SAAb,CAAuB4B,IAAvB,GAA8B,OAA9B;AACAlC,aAAaM,SAAb,CAAuB6B,SAAvB,GAAmC,GAAnC;AACAnC,aAAaM,SAAb,CAAuB8B,cAAvB,GAAwC,GAAxC;AACApC,aAAaM,SAAb,CAAuB+B,eAAvB,GAAyC,GAAzC;AACArC,aAAaM,SAAb,CAAuBR,SAAvB,GAAmCA,SAAnC;;AAEAwC,OAAOC,OAAP,GAAiBvC,YAAjB","file":"index.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mssql;\n\nclass MssqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = _.extend({}, QueryGenerator, {\n      options: sequelize.options,\n      _dialect: this,\n      sequelize\n    });\n  }\n}\n\nMssqlDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'DEFAULT': true,\n  'DEFAULT VALUES': true,\n  'LIMIT ON UPDATE': true,\n  'ORDER NULLS': false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  upserts: true,\n  returnValues: {\n    output: true\n  },\n  schemas: true,\n  autoIncrement: {\n    identityInsert: true,\n    defaultValue: false,\n    update: false\n  },\n  constraints: {\n    restrict: false,\n    default: true\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: true,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\n\nConnectionManager.prototype.defaultVersion = '12.0.2000'; // SQL Server 2014 Express\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = 'mssql';\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = '[';\nMssqlDialect.prototype.TICK_CHAR_RIGHT = ']';\nMssqlDialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = MssqlDialect;\n"]}